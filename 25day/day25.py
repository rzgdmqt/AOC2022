# part 1
(inp := open("d").read().strip().split("\n")) and (opt := {"-": -1, "=": -2}) and opt.update({f"{i}": i for i in range(10)}) or (nums := lambda num: sum(opt[ch] * 5 ** i for i, ch in enumerate(reversed(num)))) and (sum := [sum(nums(num) for num in inp)]) and (While := (lambda cond, cmd, state:(lambda f, *a :f(f, *a))((lambda While, cond, cmd, state: (((cmd(state) and False) or While(While, cond, cmd, state)) if cond(state) else False)), cond, cmd, state))) and sum.append("") or While(lambda s: s[0] > 0,lambda s: (((rem := sum[0] % 5) or True) and (s.insert(1, str(rem) + s.pop()) if rem in (0, 1, 2) else (s.insert(1, "-" + s.pop()) or s.insert(0, 1 + s.pop(0)) if rem == 4 else (s.insert(1, "=" + s.pop()) or s.insert(0, 2 + s.pop(0)) if rem == 3 else False))) or s.insert(0, s.pop(0) // 5)),sum) or print(sum[1])
# part 2